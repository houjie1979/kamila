<?phprequire_once('../includes/initialize.php');//if (!$session->is_admin()) { redirect_to("../index.php"); }//$per_page=20;//$page =!empty($_GET['page']) ? (int)$_GET['page'] : 1;//$refsql =!empty($_GET['sql']) ? $_GET['sql'] : "";	if(isset($_POST['medi'])) {	    $medi = trim($_POST['medi']);		$session->set_medi($medi);		}	else	$medi = $session->medi;if(isset($_POST['duplipage'])) {	// search duplicate pages Form has been submitted	$found_records = References::compose_issue_refs($medi);	$allrecstoshow = array();	$morerecstoshow = array();	foreach($found_records as $record){ //cycle all refs of the issue		$duplirefs = $record->find_dupli_page();		$dupliholds = Holdings::find_dupli_page($record->pages);		if(count($duplirefs)>1 || count($dupliholds)>0) {		array_push($allrecstoshow, $record);		if(count($duplirefs) > 0 ) $allrecstoshow = array_merge($allrecstoshow, $duplirefs);		if(count($dupliholds) > 0 )$morerecstoshow = array_merge($morerecstoshow, $dupliholds);		}	}	$message = "Searched References for ".$medi;}if(isset($_POST['savepage'])) {	// save duplicate pages Form has been submitted	$found_records = References::compose_issue_refs($medi);	$allrecstoshow = array();	$morerecstoshow = array();	$handle = fopen($medi."duplipages", "w");	fwrite($handle, "Page check issue ". $medi.chr(9).date('Y/m/j').chr(10));	fwrite($handle, "Refcode  Journal  Vol  Issue  Year  Pages  Author  MERDJ Article_title".chr(10));	foreach($found_records as $record){ //cycle all refs of the issue		$duplirefs = $record->find_dupli_page();		$dupliholds = Holdings::find_dupli_page($record->pages);		if(count($duplirefs)>1 || count($dupliholds)>0) {			fwrite($handle, $record->form_dupli_out());			array_push($allrecstoshow, $record);			$allrecstoshow = array_merge($allrecstoshow, $duplirefs);			$morerecstoshow = array_merge($morerecstoshow, $dupliholds);			foreach($duplirefs as $duref){				fwrite($handle, $duref->form_dupli_out());						}			foreach($dupliholds as $duhold){				fwrite($handle, $duhold->form_dupli_out());						}		}	}		fclose($handle);	$message = "Saved duplicate pages for ".$medi;}if(isset($_POST['duplititle'])) {	// search duplicate titles Form has been submitted	$found_records = References::compose_issue_refs($medi);	$allrecstoshow = array();	$morerecstoshow = array();	foreach($found_records as $record){ //cycle all refs of the issue		$duplirefs = $record->find_dupli_title();		$dupliholds = Holdings::find_dupli_title($record->article_title);		if(count($duplirefs)>0 || count($dupliholds)>0) {			array_push($allrecstoshow, $record);			if(count($duplirefs)>0) $allrecstoshow = array_merge($allrecstoshow, $duplirefs);			if(count($dupliholds)>0) $morerecstoshow = array_merge($morerecstoshow, $dupliholds);		}	}	$message = "Searched titles in References for ".$medi;}if(isset($_POST['savetitle'])) {	// save duplicate pages Form has been submitted	$found_records = References::compose_issue_refs($medi);	$allrecstoshow = array();	$morerecstoshow = array();	$handle = fopen($medi."duplititle", "w");	fwrite($handle, "Title check issue ". $medi.chr(9).date('Y/m/j').chr(10));	fwrite($handle, "Refcode  Journal  Vol  Issue  Year  Pages  Author  MERDJ Article_title".chr(10));	foreach($found_records as $record){ //cycle all refs of the issue		$allrecstoshow = $record->find_dupli_title();		$dupliholds = Holdings::find_dupli_title($record->article_title);		if(count($duplirefs)>0 || count($dupliholds)>0) {			fwrite($handle, $record->form_dupli_out());			array_push($allrecstoshow, $record);			$allrecstoshow = array_merge((array)$allrecstoshow, (array)$duplirefs);			$morerecstoshow = array_merge($morerecstoshow, $dupliholds);			foreach((array)$duplirefs as $duref){				fwrite($handle, $duref->form_dupli_out());						}			foreach($dupliholds as $duhold){				fwrite($handle, $duhold->form_dupli_out());						}	}	}		fclose($handle);	$message = "Saved duplicate titles for ".$medi;}if(isset($_POST['chkabbr'])) {	// search abbreviations Form has been submitted	$found_records = Abbreviations::print_issue($medi);	$allrecstoshow = array();	$allrecstoshow = array_merge((array)$allrecstoshow, (array)$found_records);		$message = "Searched Abbreviations for ".$medi;}if(isset($_POST['saveabbr'])) {	// save abbreviations Form has been submitted	$allrecstoshow = Abbreviations::print_issue($medi);	$handle = fopen($medi."abbreviations", "w");	fwrite($handle, "Abbreviation check issue ". $medi.chr(9).date('Y/m/j').chr(10));	fwrite($handle, "MERDJ  abbr_code  Definition".chr(10));	foreach($allrecstoshow as $record){		fwrite($handle, $record->form_dupli_out());	}	fclose($handle);	$message = "Saved abbreviations ".$medi." in the file ".$medi."abbreviations";}if(isset($_POST['chkdata'])) {	// search data Form has been submitted	$allrecstoshow = Data::compose_issue_data($medi);	$message = "Searched Data for ".$medi;}if(isset($_POST['savedata'])) {	// save data Form has been submitted	$allrecstoshow = Data::compose_issue_data($medi);	$handle = fopen($medi."data", "w");	fwrite($handle, "Data check issue ". $medi.chr(9).date('Y/m/j').chr(10));	fwrite($handle, "Ref_key  isot_code Source STemp Absorber ATemp IS QS Comments Keywords".chr(10));	foreach($allrecstoshow as $record){		fwrite($handle, $record->form_dupli_out());	}	fclose($handle);	$message = "Saved data for ".$medi." in the file ".$medi."data";}if(isset($_POST['chkrefs'])) {	// search refs Form has been submitted	$allrecstoshow = References::compose_issue_refs($medi);	foreach($allrecstoshow as $record) $record->add_definitions(); 	$message = "Searched references for ".$medi;}if(isset($_POST['saverefs'])) {	// save refs Form has been submitted	$allrecstoshow = References::compose_issue_refs($medi);	foreach($allrecstoshow as $record) $record->add_definitions();	$handle = fopen($medi."refs", "w");  fwrite($handle, pack("CCC",0xef,0xbb,0xbf));  	fwrite($handle, "References check issue ". $medi.chr(9).date('Y/m/j').chr(10));	fwrite($handle,utf8_encode("M?sèÅ????????????????"));	foreach($allrecstoshow as $record) {		fwrite($handle, $record->print_ref());	}	fclose($handle);	$message = "Saved references for ".$medi." in the file ".$medi."refs";}if(isset($_POST['chkauth'])) {	// search authors Form has been submitted	$allrecstoshow = Authors::check_authors($medi);	$message = "Searched authors for ".$medi;}if(isset($_POST['saveauth'])) {	// save authors Form has been submitted	$allrecstoshow = Authors::check_authors($medi);	$handle = fopen($medi."authors", "w");	fwrite($handle, "Authors check issue ". $medi.chr(9).date('Y/m/j').chr(10));	fwrite($handle, "Refkey  author_key Author_name (Initials) Corresponding_author_flag  Affiliation".chr(10));	foreach($allrecstoshow as $record){		fwrite($handle, $record->form_dupli_out());	}	fclose($handle);	$message = "Saved authors for ".$medi." in the file ".$medi."authors";}//print_r($found_records);?><?php include_layout_template('header.php'); ?><div id="leftcol"><h3>Check Duplicates</h3>		<form action="duplipageissue.php" method="post">			<input type="hidden" name="medi" value="<?php echo $medi; ?>" />		  <table>		    <tr>		      <td>MERDJ #:</td>		      <td>		        <input type="text" name="medi" size="6" maxlength="4" value="<?php echo $medi; ?>" />		      </td>		    </tr>			<tr>		      <td >		        <input type="submit" name="duplipage" value="Search pages" />			  </td>			  <td >		        <input type="submit" name="savepage" value="Save pages" />			  </td>    		</tr>			<tr>		      <td >		        <input type="submit" name="duplititle" value="Search title" />			  </td>			  <td >		        <input type="submit" name="savetitle" value="Save title" />			  </td>    		</tr>			<tr>		      <td >		        <input type="submit" name="chkabbr" value="Chk abbr" />			  </td>			  <td >		        <input type="submit" name="saveabbr" value="Save abbr" />			  </td>    		</tr>			<tr>		      <td >		        <input type="submit" name="chkauth" value="Chk auth" />			  </td>			  <td >		        <input type="submit" name="saveauth" value="Save auth" />			  </td>    		</tr>			<tr>		      <td >		        <input type="submit" name="chkrefs" value="Chk refs" />			  </td>			  <td >		        <input type="submit" name="saverefs" value="Save refs" />			  </td>    		</tr>			<tr>		      <td >		        <input type="submit" name="chkdata" value="Chk data" />			  </td>			  <td >		        <input type="submit" name="savedata" value="Save data" />			  </td>    		</tr>	  </table>		  </br>		  </br><?php	echo $message."</br>"; ?><?php /*	$current_page = $pagination->next_page()-1;	echo "Found - ". $total_count . "<br/>Page ". $current_page ." out of ". $pagination->total_pages() . "<br/>";	if($pagination->total_pages() > 1) {			if($pagination->has_previous_page()){			echo " <a href=\"listregions.php?page=";			echo $pagination->previous_page();			echo "&sql=".$refsql."\">&laquo; Previous</a> ";		}			if($pagination->has_next_page()){			echo " <a href=\"listregions.php?page=";			echo $pagination->next_page();			echo "&sql=".$refsql."\">Next &raquo; </a> ";		}		}*/?></div>		<div id="data"><?php if(isset($allrecstoshow)) {	foreach($allrecstoshow as $record){		echo "<table>				<tr>					<td>".$record->form_dupli_out()."</td>						<td>					</td>				</tr>			</table>";	}}if(isset($morerecstoshow)) {	foreach($morerecstoshow as $record){		echo "<table>				<tr>					<td>".$record->form_dupli_out()."</td>						<td>					</td>				</tr>			</table>";		}}?></div><?php include_layout_template('footer.php'); ?>		