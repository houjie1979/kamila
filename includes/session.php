<?php// A class to help work with Sessions// In our case, primarily to manage logging users in and out// Keep in mind when working with sessions that it is generally // inadvisable to store DB-related objects in sessionsclass Session {		private $logged_in = false;	private $access_level = 0;	public $username;	public $full_name;	public $user_id;	public $medi;		function __construct() {		session_start();		$this->check_login();    	if($this->logged_in) {      	// actions to take right away if user is logged in    	} else {      	// actions to take right away if user is not logged in    	}	}		public function allow($action){		switch ($action) {		case 'search':			if($this->access_level >= 1 ) return TRUE;		break;		case 'enter':			if($this->access_level >= 2 ) return TRUE;		break;		case 'update':			if($this->access_level >= 3 ) return TRUE;		break;		case 'delete':			if($this->access_level >= 4 ) return TRUE;		break;		case 'admin':			if($this->access_level >= 5 ) return TRUE;		break;		default:		return FALSE;		}	}		  public function is_logged_in() {    return $this->logged_in;  }/*  public function show_access() {    return $this->access_level;  }*/	public function login($user) {    // database should find user based on username/password    if($user){      $this->user_id = $_SESSION['user_id'] = $user->id;	  $this->username = $_SESSION['username'] = $user->username;	  $this->access_level = $_SESSION['access_level'] = $user->access_level;//	  $_SESSION['access_level'] = $user->access_level;//	  echo $user['id'];//	  echo $user['admin'];//	  $this->admin = $_SESSION['admin'];      $this->logged_in = true;    }  }  	public function logmein($user) {    // database should find user based on username/password//	print_r($user);//	echo $user[0]->id;    if($user[0]->id){//	print_r($user[0]);      $this->user_id = $_SESSION['user_id'] = $user[0]->id;	  $this->access_level = $_SESSION['access_level'] = $user[0]->access_level;//	  echo $user[0]->id;	  $_SESSION['full_name'] = $user[0]->first_name." ".$user[0]->last_name;	  $this->full_name =  $_SESSION['full_name'];//	  echo $user['admin'];	  $this->username = $_SESSION['username'] = $user[0]->username;      $this->logged_in = true;//	  print_r($this);//	  print_r($_SESSION);    }  }   public function logout() {    unset($_SESSION['user_id'],$user_id);    unset($_SESSION['username'],$username);    unset($_SESSION['access_level'],$access_level);    unset($_SESSION['full_name'],$full_name);    unset($this->user_id);//	unset($this->admin);    $this->logged_in = false;  }  public function logmeout() {    unset($_SESSION['user_id']);    unset($_SESSION['access_level']);    unset($_SESSION['username']);    unset($_SESSION['full_name']);    unset($this->user_id);	unset($this->access_level);	unset($this->username);	unset($this->full_name);    $this->logged_in = false;  }	public function set_medi($medi){	$_SESSION['medi'] = $medi;	$this->medi = $medi;	}	   private function check_login() {    if(isset($_SESSION['user_id'])) {      $this->user_id = $_SESSION['user_id'];      $this->username = $_SESSION['username'];      $this->full_name = $_SESSION['full_name'];	  $this->medi = $_SESSION['medi'];	  $this->access_level = $_SESSION['access_level']; //	  $this->admin = (isset($_SESSION['admin'])) ? $_SESSION['admin']:false;        $this->logged_in = true;/*	  if(isset($_SESSION['admin'])) {      	$this->admin = $_SESSION['admin'];    	} else {      		$this->admin = false;    		}      } else {      		unset($this->user_id);      		$this->logged_in = false;	  		$this->admin = false;        }*/    }  }}$session = new Session();?>