<?php// If it's going to need the database, then it's // probably smart to require it before we start.require_once(LIB_PATH.DS.'database.php');class Keycodes extends DatabaseObject {		protected static $table_name="keyword_code";	protected static $db_fields = array('id', 'keyword_code', 'definition', 					'subject_title', 'subject_flag', 'begin_use', 					'not_kw1', 'not_kw2');		public $id;	public $keyword_code;	public $definition;	public $subject_title;	public $subject_flag;	public $begin_use;	public $not_kw1;	public $not_kw2;	  public function code_name() {    if(isset($this->keyword_code) && isset($this->definition)) {      return $this->keyword_code . " " . $this->definition;    } else {      return "";    }  }public function compose_keycode_list(){	$sql = "SELECT * FROM keyword_code WHERE 1 ORDER BY keyword_code";        return self::find_by_sql($sql);		}public function export_keycode_list($records){	$tb =chr(9);	$lf =chr(10);	$output = "";	foreach($records as $rec) {		$output .= $rec->keyword_code . $tb . $rec->definition . $lf;		}	return $output;}  public static function parse_keyw_list($list){  	$pieces = explode(" ",$list);	$keywords = array();	$legitkwd = self::get_kwd_list();	foreach($pieces as $one) if(in_array(strtoupper($one), $legitkwd)) array_push($keywords, strtoupper($one));  	return array_unique($keywords);    }    public static function get_kwd_list(){	$codelist1[] = array();	$codelist2[] = array();	$allkwds = Keycodes::find_all();  	foreach($allkwds as $rec) $codelist1[] = $rec->keyword_code;	$allisot = Isotopes::find_all();	foreach($allisot as $rec) $codelist2[] = $rec->isotope_code;	$codelist = array_merge($codelist1, $codelist2);	return $codelist;  }  	public static function keys_sql_where($keycode, $keyname){						$sql = "";		if($keycode !="") {$sql .=" AND keyword_code= '{$keycode}' "; }		if($keyname !="") {$sql .=" AND LOCATE('{$keyname}',definition) ";}	return $sql;	}	public static function is_keyword($key) {	  global $database;	$sql = "SELECT COUNT(*) FROM keywords WHERE keyword_code = '{$key}'";	$result_set = $database->query($sql);	$row = $database->fetch_array($result_set);	return array_shift($row);	}	public static function authenticate($keyword_code="") {    global $database;    $keyword_code = $database->escape_value($keyword_code);    $sql  = "SELECT * FROM keyword_code ";    $sql .= "WHERE keyword_code = '{$keyword_code}' ";    $sql .= "LIMIT 1";    $result_array = self::find_by_sql($sql);		return !empty($result_array) ? array_shift($result_array) : false;	}public static function keywordcode_err(){	global $database;	$select_sql = "SELECT * FROM keyword_code WHERE keyword_code = '' OR definition ='' ";	$select_sql .= " OR subject_flag ='' ORDER BY keyword_code";	$result_array = self::find_by_sql($select_sql);	return !empty($result_array) ? $result_array : false;	}		}?>